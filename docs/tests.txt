tests/repeated_sync.rs:6:fn test_repeated_sync_no_bloat() -> anyhow::Result<()> {
tests/test_encrypted_sync.rs:24:fn test_encrypted_sync_between_clients() -> Result<()> {
tests/test_encrypted_sync.rs:155:fn test_different_passphrases_cannot_decrypt() -> Result<()> {
src/notifier.rs:47:    fn test_single_observer() {
src/notifier.rs:57:    fn test_multiple_observers() {
src/notifier.rs:71:    fn test_observe_callback() {
src/notifier.rs:96:    fn test_dead_channel_cleanup() {
src/notifier.rs:120:    fn test_concurrent_notifications() {
src/notifier.rs:151:    fn test_clone_notifier() {
src/notifier.rs:172:    fn test_observer_drop_cleanup() {
src/notifier.rs:191:    fn test_no_observers() {
src/notifier.rs:199:    fn test_multiple_callbacks() {
src/db/reactive.rs:187:    fn test_observe_query_callback() -> anyhow::Result<()> {
src/db/reactive.rs:251:    fn test_observer_cleanup_on_drop() -> anyhow::Result<()> {
src/db/query.rs:263:    fn test_query() -> anyhow::Result<()> {
src/db/query.rs:312:    fn test_explain_query_plan_parsing() -> anyhow::Result<()> {
src/db/core.rs:407:    fn test_database_uuid_persistence() -> anyhow::Result<()> {
src/db/core.rs:449:    fn test_schema_migration() -> anyhow::Result<()> {
src/db/core.rs:524:    fn test_migration_idempotency() -> anyhow::Result<()> {
src/db/history.rs:359:    fn test_insert_and_update() -> anyhow::Result<()> {
src/db/history.rs:398:    fn test_save_with_extra_fields() -> anyhow::Result<()> {
src/db/history.rs:456:    fn test_transaction_rollback_on_nonexistent_table() -> anyhow::Result<()> {
src/db/history.rs:484:    fn test_transaction_atomicity() -> anyhow::Result<()> {
src/db/history.rs:546:    fn test_change_tracking_insert() -> anyhow::Result<()> {
src/db/history.rs:584:    fn test_change_tracking_update() -> anyhow::Result<()> {
src/db/history.rs:633:    fn test_save_performance_comparison() -> anyhow::Result<()> {
src/sync/sync_engine.rs:326:    fn test_sync_config_default() {
src/sync/sync_engine.rs:332:    fn test_change_bundle_serialization() -> Result<()> {
src/sync/sync_engine.rs:354:    fn test_sync_single_database() -> Result<()> {
src/sync/sync_engine.rs:403:    fn test_sync_between_two_databases() -> Result<()> {
src/sync/sync_engine.rs:488:    fn test_sync_change_ordering() -> Result<()> {
src/sync/sync_engine.rs:561:    fn test_sync_skip_own_changes() -> Result<()> {
